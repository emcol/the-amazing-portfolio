# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Runs on pull requests to the default branch
  pull_request:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Dependencies
        run: npm ci
      - name: Prettier Check
        run: npm run format-check

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Dependencies
        run: npm ci
      - name: Test
        run: npm test

  build:
    needs: [lint, format-check, test]
    # This specifies the type of runner that the job will run on. In this case, it will run on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout # This uses the `checkout` action at version 3 to check out your repository's code onto the runner.
        uses: actions/checkout@v3
      - name: Setup Node # Uses the `setup-node` action to set up Node.js version 16 on the runner, and enables caching of npm dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - name: Setup Pages # Uses the `configure-pages` action to set up GitHub Pages for static site generation with Next.js
        uses: actions/configure-pages@v3
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next # This specifies that you're using Next.js as your static site generator.
      - name: Restore cache
        uses: actions/cache@v3
        # Uses the `cache` action to restore cached data from previous runs. In this case, it's caching the `.next/cache` directory.
        # The key for the cache is based on the runner's OS, the hash of `package-lock.json`, and the hash of `next.config.js`.
        # If the key doesn't match an existing cache, it falls back to restore from caches with the `restore-keys`.
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/next.config.js') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build with Next.js # Runs `npm run build` to create an optimized production build of your Next.js application
        run: npm run build
      - name: Static HTML export with Next.js
        run: npm run export
      - name: Upload artifact
        # Uses the `upload-artifact` action to upload the `./out` directory (which contains the exported Next.js application)
        # as a workflow artifact, so it can be used by other jobs in this workflow
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
